source('~/Downloads/Exam Files/playermat.R', echo=TRUE)
sol$solution
sol$objval
sol$status
source('~/Downloads/Exam Files/playermat.R', echo=TRUE)
sol$scale
sol$solution
sol$status
source('~/Downloads/Exam Files/playermat.R', echo=TRUE)
sol$solution
sol$objval
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
p = 0
for (i in 1:10000){
park1 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park2 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
park3 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if ((park1>155)|(park2>155)|(park3>155)) {
p = p+1
}
}
print(p/10000)
source('~/Downloads/Exam Files 2/2simMultStk.R', echo=TRUE)
source('~/Downloads/Exam Files/simMultStk.R', echo=TRUE)
cov
#*****************************************************************
# Simulating multiple stock prices
#******************************************************************
s0     = c(1000,1000,1000)
T = 20         #no of years to run simulation
mu =  c(0.1,0.15,0.05)      #expected returns per year
cor = matrix(c(1,-0.9,-0.5,
-0.9,1,-0.5,
-0.5,-0.5,1),
3,3)   #volatility per year
cov = diag(c(0.1,0.25,0.02))%*%cor%*%diag(c(0.1,0.25,0.02))
cov
source('~/Downloads/Exam Files 2/2simMultStk.R', echo=TRUE)
balance
head(balance)
mean(balance)
sd(balance)
source('~/Downloads/Exam Files 2/2simMultStk.R', echo=TRUE)
mean(balance)
source('~/Downloads/Exam Files/simMultStk.R', echo=TRUE)
mean(balance)
source('~/Downloads/Exam Files 2/2simMultStk.R', echo=TRUE)
head(balance)
sort(balance)
mean(balance[1:2000])
mean(balance)
balance[1:2000]
mean(balance[1:2000])
balance <- sort(balance)
balance
mean(balance)
mean(balance[1:2000])
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),200, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
p=0
for (i in 1:10000){
park123 = sum(sample(c(1,0),600, replace = TRUE,prob = c(0.72,0.28)))
if (park123>155*3) {
p = p+1
}
}
print(p/10000)
install.packages(dplyr)
install.packages('dplyr')
install.packages('extrafont')
installed.packages()
install.packages('ggthemes')
install.packages('gplots')
install.packages('grid')
installed.packages()
require("ggplot2")
require("ggthemes")
install.packages('jsonlite')
install.packages('lubridate')
install.packages('RCurl')
install.packages('reshape2')
install.packages('tableplot')
install.packages('tidyr')
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
library('jsonlite')
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
df
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Access data.world Database.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
installed.packages('RCurl')
?ecdf
source('~/.active-rstudio-document', echo=TRUE)
mySin()
mySin()(pi)
pi
sin(pi)
mySin(pi)
?apply
function(x) {x+1}(19)
function(x) {x+1} (19)
source('~/.active-rstudio-document', echo=TRUE)
function(x){x+1}
(19)
lamda
??lamda
?lamda
AirPassengers
datasets
data(LaborSupply)
LaborSupply
library(datasets)
data(LaborSupply)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
source('~/Desktop/CS 329E/Jan 19.R', echo=TRUE)
install.packages('tibble')
install.packages('markdown')
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tibble", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
rmarkdown
test
rmarkdown_format()
{r} [linked phrase] (https://chriswongwr.shinyapps.io/Project5/)
knitr::opts_chunk$set(echo = TRUE)
{r} [linked phrase] (https://chriswongwr.shinyapps.io/Project5/)
[linked phrase] (https://chriswongwr.shinyapps.io/Project5/)
knitr::opts_chunk$set(echo = TRUE)
[linked phrase] (https://chriswongwr.shinyapps.io/Project5/)
[linked phrase](www.bit.ly/1EqAdIp)
knitr::opts_chunk$set(echo = TRUE)
[linked phrase] (https://chriswongwr.shinyapps.io/Project5/)
setwd("~/Desktop/CS 329E/Project5/00 Doc")
knitr::opts_chunk$set(echo = TRUE)
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("shinydashboard", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02_Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02_Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02_Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("...\02 Shiny", package="shiny"),
)
shinyAppDir(
system.file(".../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("../02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny", package="shiny"),
)
setwd("~/Desktop/CS 329E/Project5/02 Shiny")
shinyAppDir(
system.file("/02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny/ui.R", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny/ui.R", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny/ui.R", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny/ui.R", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny/ui.R", package="shiny"),
)
shinyAppDir(
system.file("/02 Shiny/ui.R", package="shiny"),
)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?filter
?dplyr::filter()
?dplyr::filter
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp('~/Desktop/CS 329E/DataVisulization:DrCannata/09TableauExamples')
runApp()
runApp('~/Desktop/CS 329E/DataVisulization:DrCannata/09TableauExamples')
runApp()
runApp()
